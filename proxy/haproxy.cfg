global
    daemon
    user haproxy
    group haproxy
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /var/run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    tune.ssl.default-dh-param 2048

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option log-health-checks
    option forwardfor
    option httpchk
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Stats page
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# Frontend for LibProxy
frontend libproxy_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/libproxy.pem
    
    # Default backend
    default_backend libproxy_backend
    
    # Include dynamic configurations
    include /etc/haproxy/configs/*.cfg

# Backend for LibProxy API
backend libproxy_backend
    balance roundrobin
    option httpchk GET /api/health
    http-check expect status 200
    
    # Backend servers
    server libproxy_api backend:5000 check
    
    # Headers
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    http-request set-header X-Real-IP %[src]
    http-request set-header X-Forwarded-For %[src]

# Backend for journal access (dynamic)
# This will be populated by the proxy service
backend journal_proxy
    mode http
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    
    # Default server (will be replaced by dynamic configs)
    server default_server 127.0.0.1:8080 check disabled
